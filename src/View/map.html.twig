{% block header %}

    <div id="container_allow">
        <p id="title_allow">Server want to know your location</p>
        <div id="container_btns">
            <input id="btn_yes" type="button" value="Yes">
            <input id="btn_no" type="button" value="No">
        </div>
    </div>
    <h2 id="current_location"></h2>


    <form id="f_gL" method="post" action="/map"></form>

    <div id="map" class="map"></div>

    <style>
        #map{
            height: 80vh;
            width: 90%;
        }
        #f_gL{
            display: none;
        }
        ul{
            display: none;
        }
    </style>

    <script src="https://cdn.jsdelivr.net/gh/openlayers/openlayers.github.io@master/en/v6.8.1/build/ol.js"></script>
    <script async type="text/javascript">
        let map;

        let tab = JSON.parse('{{ locations|json_encode|raw }}');



        if(tab == null){
            document.getElementById('btn_yes').addEventListener('click', ()=>{
                if(navigator.geolocation){
                    navigator.geolocation.getCurrentPosition(() =>{
                        document.getElementById('f_gL').submit();
                    });
                } else{
                    document.getElementById('current_location').innerHTML = "Geolocation is not supported by this browser";
                }
            });
        } else{
            if(navigator.geolocation){
                navigator.geolocation.getCurrentPosition(showPosition);
                navigator.geolocation.getCurrentPosition(showMapsPosition);
                document.getElementById('container_allow').style.display = 'none';
                //document.getElementById('container_verif').style.removeProperty('display');

                //displayContaminated(tab);
            } else{
                document.getElementById('current_location').innerHTML = "Geolocation is not supported by this browser";
            }
        }




        function showPosition(loc){
            document.getElementById('current_location').innerHTML = "Latitude: " + loc.coords.latitude +
                "<br>Longitude: " + loc.coords.longitude;
        }

        function showMapsPosition(loc){
            initMap(loc.coords, tab);
        }




        function initMap(location, tab){
            let OSM = new ol.layer.Tile({
                title: 'OSM',
                type: 'base',
                visible: true,
                source: new ol.source.OSM()
            })

            map = new ol.Map({
                target: 'map',
                layers:
                    new ol.layer.Group({
                        tile: 'Base Maps',
                        layers: [OSM]
                    }),
                view: new ol.View({
                    center: ol.proj.fromLonLat([location.longitude, location.latitude]),
                    zoom: 14
                })
            });

            let Markers=[];

            tab.forEach(loc => {
                console.log(loc.longitude+"  "+loc.latitude);

                let marker = new ol.Feature({
                    geometry: new ol.geom.Point(ol.proj.transform([loc.longitude, loc.latitude], 'EPSG:4326',
                        'EPSG:3857')),
                    name: 'mark'
                });

                Markers.push(marker);

            });

            let vectorLayer = new ol.layer.Vector({
                title: 'markers',
                source: new ol.source.Vector({
                    features: Markers,
                }),
                /*style: new ol.style.Style({
                    image: new ol.style.Icon({
                        anchor: [0.5, 64],
                        anchorXUnits: 'fraction',
                        anchorYUnits: 'pixels',
                        src: '/ping.png',
                        imgSize: [64, 64]
                    }),
                })*/
                style: new ol.style.Style({
                    image: new ol.style.Circle({
                        radius: 12,
                        fill: new ol.style.Fill({color: 'red'})
                    })
                })
            });


            let Me = new ol.Feature({
                geometry: new ol.geom.Point(ol.proj.transform([location.longitude, location.latitude], 'EPSG:4326',
                    'EPSG:3857')),
                name: 'Me'
            });
            let vectorMe = new ol.layer.Vector({
                title: 'markersMe',
                source: new ol.source.Vector({
                    features: [Me]
                }),
                style: new ol.style.Style({
                    image: new ol.style.Icon({
                        anchor: [0.5, 64],
                        anchorXUnits: 'fraction',
                        anchorYUnits: 'pixels',
                        src: '/ping.png',
                        imgSize: [64, 64]
                    }),
                    text: new ol.style.Text({
                        text: 'You are here',
                        scale: 1.3,
                        fill: new ol.style.Fill({
                            color: '#000000'
                        }),
                        stroke: new ol.style.Stroke({
                            color: '#AAAAAA',
                            width: 3.5
                        })
                    })
                })
            })

            if(map!=null) {
                map.addLayer(vectorLayer);
                map.addLayer(vectorMe);
                //layerSwitch.renderPanel();
            }
        }


        function reloadMapLatLng(lat, lng){

        }




    </script>
{% endblock %}